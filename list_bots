#!/bin/bash
# Loops through a log file, displaying the error requests of a Thin webserver.
#   It could probably be made more efficent, but speed is not an issue because
#   an interval between lines is needed to make output more readable.

LOGFILE="$HOME/projects/jsite/jsite.log"
BUFFER=`mktemp /tmp/buffer.XXXX`
RESULTBUF=`mktemp /tmp/resultbuf.XXXX`

function quit
{
	rm $BUFFER 2> /dev/null
	tput cnorm
	tput sgr0
	tput rmcup
	tput clear
}
trap quit SIGHUP SIGINT SIGTERM

function print_list
{
	cat $LOGFILE |
	sed -ne '/^99.90.212.118/d' -ne '/^Invalid/d' -ne '/Thin/d'\
		-ne '/Maximum/d' -ne '/^\=\=/d' -ne '/^Listening/d'\
		-ne '/^$/d' -ne '/var/d' -ne '/HTTP\/[0-9]\.[0-9]\" [^200]/p' >\
	$BUFFER

	tail -50 $BUFFER > $RESULTBUF

	while read LINE; do
		echo $LINE |
		sed -e 's/\" [0-9]*.*/\"/'\
			-e 's/\"\(GET\|POST\|HEAD\) \(\/.*\) HTTP.*\"/\x1b[0;1;33m\2\x1b[0m/'\
			-e 's/\(.*\)\[\(.*\)\]/\1\x1b[0;1;32m\2\x1b[0m\t/'\
			-e 's/^\([0-9\.]*\) \-/\x1b[0;1;31m\1\x1b[0m\t/g'\
			-e 's/\-\s//g'\
			-e 's/.*/\t\t\t&/'
		sleep $INTERVAL
	done < $RESULTBUF
}

function print_list_ext
{
	cat $LOGFILE |
	sed -ne '/^99.90.212.118/d' -ne '/^Invalid/d' -ne '/Thin/d'\
		-ne '/Maximum/d' -ne '/^\=\=/d' -ne '/^Listening/d'\
		-ne '/^$/d' -ne '/var/d' -ne '/HTTP\/[0-9]\.[0-9]\" [0-9]*/p' >\
	$BUFFER

	tail -50 $BUFFER > $RESULTBUF

	while read LINE; do
		echo $LINE |
		sed -e 's/\" [0-9]*.*/\"/'\
			-e 's/\"\(GET\|POST\|HEAD\) \(\/.*\) HTTP.*\"/\x1b[0;1;33m\2\x1b[0m/'\
			-e 's/\(.*\)\[\(.*\)\]/\1\x1b[0;1;32m\2\x1b[0m\t/'\
			-e 's/^\([0-9\.]*\) \-/\x1b[0;1;31m\1\x1b[0m\t/g'\
			-e 's/\-\s//g'\
			-e 's/.*/\t\t\t\t\t&/'
		sleep $INTERVAL
	done < $RESULTBUF
}

### Start execution ###

tput smcup
INTERVAL=0
[[ "$1" == "" ]] && INTERVAL="0.5" || INTERVAL="$1"

LINES=`tput lines`
COLS=`tput cols`
STATUS="Running with interval $INTERVAL"
STATLEN=$[ $COLS - ${#STATUS} - 1]

tput clear
tput cup 0 0
tput dim
echo "Logged HTTP requests, parsed from Thin logfile."

tput sc
tput cup 0 $STATLEN
echo $STATUS
tput rc

for ((i = 0; i < $COLS; i++)); do
	printf "="
done

tput sgr0
echo
tput sc
tput smcup

tput civis
tput csr 3 $[ $LINES - 1 ]
tput cud 3

( while :; do [[ "$2" == "-n" ]] && print_list_ext || print_list ; done )
quit

