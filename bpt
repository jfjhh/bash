#!/bin/bash

#  bpt.sh
#  Code
#
#  Created by Alex Striff on 2014-02-16.
#  Uncopyrighted.
#


# Variables.
POM=0
WORK=0
BREAK=0
SOUND="$HOME/button-09.wav"


# Arg variable assignments.
if [[ "$1" == "-w" ]]; then
	WORK=$2
	BREAK=300 # 5 minutes.

elif [[ "$1" == "-b" ]]; then
	WORK=900 # 15 minutes.
	BREAK=$2

elif [[ "$1" == "-wb" ]]; then
	WORK=$2
	BREAK=$3

else
	WORK=900 # 15 minutes.
	BREAK=300 # 5 minutes.
fi


# Display countdown.
function countdown() {

TYPE=""
TIME=0
ALERT=false

if [[ $[$POM % 2] == 1 ]]; then
	TYPE="Work"
	TIME=$WORK
	COUNT=$[$POM/2]

else
	TYPE="Break"
	TIME=$BREAK
fi

for (( i = $TIME; i >= 0; i-- )); do

	MINUTES=$[$i/60]
	SECONDS=$[$i%60]

	printf "\t[%02d]\t\t\033[0;7m[%02d:%02d]\033[0m\t\t[%s] \r"\
		$COUNT $MINUTES $SECONDS $TYPE
	sleep 1

done

}

# Visual alert
function play_sound() {

echo -n 
aplay $SOUND &> /dev/null

}

# Launch messages.
function print_info() {

echo "Running 'bpt.sh': Started at '`date +"%T"`'."
echo "+====================================================+"

printf "\tWORK:\t\t%03d seconds\t(%02d minutes).\n"\
	$WORK $[$WORK/60]
printf "\tBREAK:\t\t%03d seconds\t(%02d minutes).\n"\
	$BREAK $[$BREAK/60]

echo "+====================================================+"
echo -e "\tPomodoros:\tTime Left:\tTimer:"

}


clear
pause -r # press any key to continue, then do carriage return.
print_info

for (( POM=1; POM>-1; POM++ )); do

	countdown
	play_sound

done

