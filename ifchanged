#!/bin/bash

function print_help()
{
	[ -n "$1" ] && echo "$1"
	cat <<-EOF
	==========================================================================

	USAGE: ifchanged {-h} {-s} [-c COMMAND] {-i INTERVAL (default 2)} {-d
	(default false)}

	==========================================================================
	-h :	Show this help.
	==========================================================================
	-s :	Silent mode, don't show informational messages, only command
	======= output at the end of the script, uncolored (default false).
	==========================================================================
	-c :	The one-word command to compare the output of. Can use a longer
	======= command from stdin by using '-c stdin'.
	==========================================================================
	-i :	The interval of time to wait between running commands in seconds.
	==========================================================================
	-d :	Print the diff of the output, instead of both outputs.
	==========================================================================

	EOF
	exit 1
}

function cleanup()
{
	if [[ -n "$1" ]]; then
		rm "$1"
	fi
	if [[ -n "$2" ]]; then
		rm "$2"
	fi
}

[[ -z $TMPDIR ]] && TMP="/tmp" || TMP=$TMPDIR
TMPOUT_1="`mktemp $TMP/ifchanged.XXXX`"
TMPOUT_2="`mktemp $TMP/ifchanged.XXXX`"

trap "cleanup $TMPOUT_1 $TMPOUT_2; exit 2;" SIGINT SIGTERM

function main()
{
	[ $# -lt 2 ] && print_help "Only $# args."

	CMD=""
	CMD_OUT=""
	CMD_OUT_TMP=""
	SEPARATOR="======================================"
	INTERVAL=2
	ELAPSED=0
	SILENT=false
	DIFF=false
	OK=true
	TMP=""

	while getopts "hsc:i:m:d" ARG; do
		case $ARG in
			's' )
				SILENT=true
				;;
			'c' )
				CMD="$OPTARG"
				;;
			'i' )
				INTERVAL=$OPTARG
				;;
			'm' )
				MAX_TIME=$OPTARG
				;;
			'd' )
				DIFF=true
				;;
			'h' )
				print_help
				;;
		esac
	done

	if [[ "$CMD" == "stdin" ]]; then
		read CMD
	fi

	[[ $INTERVAL -le 0 ]] && print_help "Bad -i arg: $INTERVAL"
	[[ -z "${CMD}" ]] && print_help "Bad -c arg: $CMD"

	! $DIFF && tput setaf 212
	while $OK ; do
		! $SILENT && echo -en "\tRunning command: \"$CMD\" \
			($ELAPSED seconds elapsed).\r" >&2
		eval "$CMD" > $TMPOUT_1
		CMD_OUT_TMP="`cat $TMPOUT_1`"
		sleep $INTERVAL
		let ELAPSED=$[$ELAPSED + $INTERVAL]
		OK=false
		eval "$CMD" > $TMPOUT_2
		CMD_OUT="`cat $TMPOUT_2`"
		[[ "$CMD_OUT" != "$CMD_OUT_TMP" ]] && OK=false || OK=true
	done

	! $DIFF && tput sgr0
	if ! $SILENT ; then
		tput cud1
		tput setaf 192
	fi
	if $DIFF ; then
		diff -t "$TMPOUT_1" "$TMPOUT_2" |
		grep --color=never "^[<>]" | sed -e '/^[<>]\stotal/d' -e \
		's/\(^[<>]\s\)[a-z\-]*\s[0-9]*\s[a-z]*\s[a-z]*\s\(.*\)/\1\2/'
	else
		cat "$TMPOUT_1" && \
			echo -e "\n$SEPARATOR\n" && cat "$TMPOUT_2"
	fi
	cleanup $TMPOUT_1 $TMPOUT_2
}

( main $* )

